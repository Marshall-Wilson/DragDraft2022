{"ast":null,"code":"var _jsxFileName = \"/Users/marshall/Projects/DragDraft2022/DragDraft2022/client/src/components/WeekInfo.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeekInfo = _ref => {\n  let {\n    week,\n    queens\n  } = _ref;\n  const weekData = {\n    \"Maxi Winner:\": queens.filter(queen => week.maxi_winner.includes(queen.queen_id)),\n    \"Mini Winner:\": queens.filter(queen => week.mini_winner.includes(queen.queen_id)),\n    \"Lipsync Winner:\": queens.filter(queen => week.ls_winner.includes(queen.queen_id)),\n    \"Eliminated:\": queens.filter(queen => week.elims.includes(queen.queen_id)),\n    \"Top Three:\": queens.filter(queen => week.top_three.includes(queen.queen_id)),\n    \"Winner\": queens.filter(queen => week.winner.includes(queen.queen_id))\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.keys(weekData).map(field => {\n      if (weekData[field].length > 0) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 29\n          }, this), weekData[field].map(queen => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: queen.queen_name\n            }, queen.queen_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 37\n            }, this);\n          })]\n        }, field, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_c = WeekInfo;\nexport default WeekInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeekInfo\");","map":{"version":3,"sources":["/Users/marshall/Projects/DragDraft2022/DragDraft2022/client/src/components/WeekInfo.jsx"],"names":["React","WeekInfo","week","queens","weekData","filter","queen","maxi_winner","includes","queen_id","mini_winner","ls_winner","elims","top_three","winner","Object","keys","map","field","length","queen_name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,QAAQ,GAAG,QAAoB;AAAA,MAAnB;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAmB;AAEjC,QAAMC,QAAQ,GAAG;AACb,oBAAgBD,MAAM,CAACE,MAAP,CAAcC,KAAK,IAAIJ,IAAI,CAACK,WAAL,CAAiBC,QAAjB,CAA0BF,KAAK,CAACG,QAAhC,CAAvB,CADH;AAEb,oBAAgBN,MAAM,CAACE,MAAP,CAAcC,KAAK,IAAIJ,IAAI,CAACQ,WAAL,CAAiBF,QAAjB,CAA0BF,KAAK,CAACG,QAAhC,CAAvB,CAFH;AAGb,uBAAmBN,MAAM,CAACE,MAAP,CAAcC,KAAK,IAAIJ,IAAI,CAACS,SAAL,CAAeH,QAAf,CAAwBF,KAAK,CAACG,QAA9B,CAAvB,CAHN;AAIb,mBAAeN,MAAM,CAACE,MAAP,CAAcC,KAAK,IAAIJ,IAAI,CAACU,KAAL,CAAWJ,QAAX,CAAoBF,KAAK,CAACG,QAA1B,CAAvB,CAJF;AAKb,kBAAcN,MAAM,CAACE,MAAP,CAAcC,KAAK,IAAIJ,IAAI,CAACW,SAAL,CAAeL,QAAf,CAAwBF,KAAK,CAACG,QAA9B,CAAvB,CALD;AAMb,cAAUN,MAAM,CAACE,MAAP,CAAcC,KAAK,IAAIJ,IAAI,CAACY,MAAL,CAAYN,QAAZ,CAAqBF,KAAK,CAACG,QAA3B,CAAvB;AANG,GAAjB;AASA,sBACI;AAAA,cACKM,MAAM,CAACC,IAAP,CAAYZ,QAAZ,EAAsBa,GAAtB,CAA0BC,KAAK,IAAI;AAChC,UAAId,QAAQ,CAACc,KAAD,CAAR,CAAgBC,MAAhB,GAAyB,CAA7B,EAAgC;AAC5B,4BACI;AAAA,kCACI;AAAA,sBAAID;AAAJ;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKd,QAAQ,CAACc,KAAD,CAAR,CAAgBD,GAAhB,CAAoBX,KAAK,IAAI;AAC1B,gCACI;AAAA,wBAAyBA,KAAK,CAACc;AAA/B,eAAQd,KAAK,CAACG,QAAd;AAAA;AAAA;AAAA;AAAA,oBADJ;AAGH,WAJA,CAFL;AAAA,WAAUS,KAAV;AAAA;AAAA;AAAA;AAAA,gBADJ;AAUH;AACJ,KAbA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CA7BD;;KAAMjB,Q;AA+BN,eAAeA,QAAf","sourcesContent":["import React from 'react'\n\nconst WeekInfo = ({week, queens}) => {\n\n    const weekData = {\n        \"Maxi Winner:\": queens.filter(queen => week.maxi_winner.includes(queen.queen_id)),\n        \"Mini Winner:\": queens.filter(queen => week.mini_winner.includes(queen.queen_id)),\n        \"Lipsync Winner:\": queens.filter(queen => week.ls_winner.includes(queen.queen_id)),\n        \"Eliminated:\": queens.filter(queen => week.elims.includes(queen.queen_id)),\n        \"Top Three:\": queens.filter(queen => week.top_three.includes(queen.queen_id)),\n        \"Winner\": queens.filter(queen => week.winner.includes(queen.queen_id))\n    }\n\n    return (\n        <div>\n            {Object.keys(weekData).map(field => {\n                if (weekData[field].length > 0) {\n                    return(\n                        <div key={field}>\n                            <p>{field}</p>\n                            {weekData[field].map(queen => {\n                                return(\n                                    <p key={queen.queen_id}>{queen.queen_name}</p>\n                                )\n                            })}\n                        </div>\n                    )\n                }\n            })}\n        </div>\n    )\n}\n\nexport default WeekInfo\n"]},"metadata":{},"sourceType":"module"}