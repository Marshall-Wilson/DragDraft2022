{"ast":null,"code":"var _jsxFileName = \"/Users/marshall/Projects/DragDraft2022/DragDraft2022/client/src/components/PlayerSignup.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PlayerSignup = () => {\n  _s();\n\n  const [queens, setQueens] = useState([]);\n  const [formState, setFormState] = useState({\n    name: \"\",\n    playerQueens: []\n  });\n\n  const handleNameChange = _ref => {\n    let {\n      target\n    } = _ref;\n    const value = target.value;\n    const name = target.name;\n    setFormState(values => ({ ...values,\n      [name]: value\n    }));\n  };\n\n  const handleCheckChange = idx => {\n    let newFormState = structuredClone(formState); // Don't allow new checkmarks if there are already 5\n\n    if (!newFormState.playerQueens[idx]) {\n      if (newFormState.playerQueens.filter(elmt => elmt).length < 5) {\n        newFormState.playerQueens[idx] = !newFormState.playerQueens[idx];\n      }\n    } else {\n      newFormState.playerQueens[idx] = !newFormState.playerQueens[idx];\n    }\n\n    setFormState(newFormState);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    fetch('http://localhost:9000/api/queens', {\n      method: 'GET'\n    }).then(res => res.json().then(queensList => {\n      setFormState(oldState => ({ ...oldState,\n        playerQueens: new Array(queensList.length).fill(false)\n      }));\n      setQueens(queensList);\n    })).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"formLabel formText\",\n        children: [\"Your Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: formState.name,\n          id: \"name\",\n          name: \"name\",\n          onChange: handleNameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"formLabel formCheckboxContainer\",\n        children: [\"Choose Your 5 Queens:\", queens.map((queen, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"formCheckbox\",\n            children: [\" \", queen.queen_name, /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: idx,\n              name: \"queen\",\n              value: queen.queen_name,\n              checked: formState.playerQueens[idx],\n              onChange: () => handleCheckChange(idx)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this)]\n          }, queen.queen_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PlayerSignup, \"PV1IEPHekxrTdqXBXlmniLWK0h4=\");\n\n_c = PlayerSignup;\nexport default PlayerSignup;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerSignup\");","map":{"version":3,"sources":["/Users/marshall/Projects/DragDraft2022/DragDraft2022/client/src/components/PlayerSignup.jsx"],"names":["React","useEffect","useState","PlayerSignup","queens","setQueens","formState","setFormState","name","playerQueens","handleNameChange","target","value","values","handleCheckChange","idx","newFormState","structuredClone","filter","elmt","length","handleSubmit","e","preventDefault","fetch","method","then","res","json","queensList","oldState","Array","fill","catch","err","console","log","map","queen","queen_name","queen_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nconst PlayerSignup = () => {\n    const [queens, setQueens] = useState([]);\n    const [formState, setFormState] = useState({\n        name: \"\",\n        playerQueens: []\n    });\n\n    const handleNameChange = ({ target }) => {\n        const value = target.value;\n        const name = target.name;\n        setFormState(values => ({...values, [name]: value}));\n    }\n\n    const handleCheckChange = (idx) => {\n        let newFormState = structuredClone(formState);\n        // Don't allow new checkmarks if there are already 5\n        if (!newFormState.playerQueens[idx]) {\n            if (newFormState.playerQueens.filter(elmt => elmt).length < 5) {\n                newFormState.playerQueens[idx] = !newFormState.playerQueens[idx];\n            }\n        } else {\n            newFormState.playerQueens[idx] = !newFormState.playerQueens[idx];\n        }\n        setFormState(newFormState);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n    }\n\n    useEffect(() => {\n        fetch('http://localhost:9000/api/queens', {\n            method: 'GET'\n        })\n        .then(res => res.json()\n            .then(queensList => {\n                setFormState(oldState => ({...oldState, playerQueens: new Array(queensList.length).fill(false)}));\n                setQueens(queensList);\n            })\n        )\n        .catch(err => console.log(err));\n    }, [])\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <label className=\"formLabel formText\">Your Name:\n                    <input type=\"text\" value={formState.name} id=\"name\" name=\"name\" onChange={handleNameChange}/>\n                </label>\n                <label className=\"formLabel formCheckboxContainer\">Choose Your 5 Queens:\n                    {queens.map((queen, idx) => {\n                        return (\n                            <label key={queen.queen_id} className=\"formCheckbox\"> {queen.queen_name}\n                                <input type=\"checkbox\" id={idx} name=\"queen\" value={queen.queen_name} checked={formState.playerQueens[idx]} onChange={() => handleCheckChange(idx)}/>\n                            </label>\n                        )\n                    })}\n                </label>\n                <input type=\"submit\" value=\"Submit\"/>\n            </form>\n        </div>\n    )\n}\n\nexport default PlayerSignup\n"]},"metadata":{},"sourceType":"module"}